<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <de.pellepelster.jenkins.walldisplay.WallDisplayJobProperty plugin="jenkinswalldisplay@0.6.30"/>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.3.5">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>ssh://jenkins@10.0.0.198:29418/JavaTraining/Faculty/solutioncodebase</url>
        <credentialsId>adop-jenkins-master</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>**</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.PerBuildTag/>
    </extensions>
  </scm>
  <assignedNode>docker</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>echo &quot;Running automation tests&quot;

ref=$( echo ${JOB_NAME} | sed &apos;s#[ /]#_#g&apos; )
owasp_zap_container=owasp__zap_petclinic-${ref}

if $(docker top $owasp_zap_container &amp;&gt; /dev/null); then
    docker stop $owasp_zap_container
    docker rm $owasp_zap_container
fi

echo &quot;Starting OWASP ZAP Intercepting Proxy&quot;
nohup docker run -i -v ${WORKSPACE}/owasp_zap_proxy/test-results/:/opt/zaproxy/test-results/ --name ${owasp_zap_container} -P docker.accenture.com/dcsc/owasp_zap_proxy /etc/init.d/zaproxy start test-${BUILD_NUMBER} &amp; 

echo &quot;Running Selenium tests through maven.&quot;
sleep 30s

# Setting up variables for Maven
environment_ip=$(dig +short JavaTraining-Faculty-CI.node.adop.consul)
node_host_id=$(echo &quot;${NODE_NAME}&quot; | cut -d&apos;-&apos; -f1 | rev | cut -d&apos;_&apos; -f1 | rev)

VAR_APPLICATION_URL=http://${environment_ip}:80/FestivalPortal
VAR_ZAP_IP=$(dig +short jt-jenkins-slave-${node_host_id}.node.adop.consul)
VAR_ZAP_PORT=&quot;9090&quot;
VAR_ZAP_PORT=$(docker port ${owasp_zap_container} | grep &quot;9090&quot; | sed -rn &apos;s#9090/tcp -&gt; 0.0.0.0:([[:digit:]]+)$#\1#p&apos;)

echo &quot;VAR_APPLICATION_URL=${VAR_APPLICATION_URL}&quot; &gt;&gt; maven_variables.properties
echo &quot;VAR_ZAP_IP=${VAR_ZAP_IP}&quot; &gt;&gt; maven_variables.properties
echo &quot;VAR_ZAP_PORT=${VAR_ZAP_PORT}&quot; &gt;&gt; maven_variables.properties
</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@1.91.3">
      <info>
        <propertiesFilePath>maven_variables.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Maven>
      <targets>clean install -B -P selenium-tests -DapplicationURL=&quot;${VAR_APPLICATION_URL}&quot; -DzapIp=&quot;${VAR_ZAP_IP}&quot; -DzapPort=&quot;${VAR_ZAP_PORT}&quot;</targets>
      <mavenName>ADOP Maven</mavenName>
      <pom>FestivalPortal/pom.xml</pom>
      <usePrivateRepository>false</usePrivateRepository>
      <settings class="jenkins.mvn.DefaultSettingsProvider"/>
      <globalSettings class="jenkins.mvn.DefaultGlobalSettingsProvider"/>
    </hudson.tasks.Maven>
    <hudson.tasks.Shell>
      <command>echo &quot;Stopping OWASP ZAP Proxy and generating report.&quot;
ref=$( echo ${JOB_NAME} | sed &apos;s#[ /]#_#g&apos; )
owasp_zap_container=owasp__zap_petclinic-${ref}

docker stop ${owasp_zap_container}
docker rm ${owasp_zap_container}

docker run -i -v ${WORKSPACE}/owasp_zap_proxy/test-results/:/opt/zaproxy/test-results/ docker.accenture.com/dcsc/owasp_zap_proxy /etc/init.d/zaproxy stop test-${BUILD_NUMBER}

cp ${WORKSPACE}/owasp_zap_proxy/test-results/test-${BUILD_NUMBER}-report.html . </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>*.html</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <htmlpublisher.HtmlPublisher plugin="htmlpublisher@1.4">
      <reportTargets>
        <htmlpublisher.HtmlPublisherTarget>
          <reportName>HTML Report</reportName>
          <reportDir>FestivalPortal/target/failsafe-reports</reportDir>
          <reportFiles>index.html</reportFiles>
          <alwaysLinkToLastBuild>false</alwaysLinkToLastBuild>
          <keepAll>false</keepAll>
          <allowMissing>false</allowMissing>
          <wrapperName>htmlpublisher-wrapper.html</wrapperName>
        </htmlpublisher.HtmlPublisherTarget>
      </reportTargets>
    </htmlpublisher.HtmlPublisher>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.27">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>BUILD = ${BUILD}</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>FestivalPortal_Deploy_to_Prod</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.26">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <org.jenkinsci.plugins.environmentdashboard.DashboardBuilder plugin="environment-dashboard@1.1.3">
      <nameOfEnv>JavaTraining-Faculty-CI</nameOfEnv>
      <componentName>OWASP ZAP/Selenium Integration Tests</componentName>
      <buildNumber>${BUILD_NUMBER}</buildNumber>
      <buildJob></buildJob>
      <packageName></packageName>
      <data/>
      <addColumns>false</addColumns>
    </org.jenkinsci.plugins.environmentdashboard.DashboardBuilder>
  </buildWrappers>
</project>