<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1.11">
  <actions/>
  <description>IMPORTANT: Before running this job please make sure:&#xd;
     Jenkins&apos; public key has been attached to an Inner Source account - if it has not then this job will hang and eventually fail&#xd;
     The &quot;aws-environment-provisioning&quot; credential has been created with a valid AWS Access and Secret Access key - if it is missing or invalid the environments will fail to create.&#xd;
     Setup_Java_Training has been run.&#xd;
&#xd;
The purpose of this job is to add additional participants. &#xd;
&#xd;
It automates:&#xd;
     Creating a project, loading the participant cartridge, and creating a test environment per participant&#xd;
&#xd;
Users will also be created in LDAP and assigned to the relevant groups that give them access to their respective projects.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>PARTICIPANT_USERS</name>
          <description>A list of email addresses for the participants. They will be given a project each.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>AWS_KEY_PAIR_NAME</name>
          <description>MANDATORY. The AWS Key Pair that will be used to create the test environment. This can be the same key pair that the stack was created with, or one specifically for test environments.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>AWS_ENVIRONMENT_SUBNET_ID</name>
          <description>MANDATORY.The AWS environment subnet ID that the test environments will be created in. This value should be taken from the outputs section of the CloudFormation stack in the AWS Console.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>AWS_VPC_ID</name>
          <description>MANDATORY.The AWS VPC ID that the test environments will be created in. This value should be taken from the outputs section of the CloudFormation stack in the AWS Console.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>AWS_DEFAULT_APP_SECURITY_GROUP_ID</name>
          <description>MANDATORY.The AWS default application security group ID that the test environments will be created in. This value should be taken from the outputs section of the CloudFormation stack in the AWS Console.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@1.11">
    <script>// Validate variables
node {
    sh &quot;&quot;&quot;#!/bin/bash -e
    
    echo &quot;Validating parameters&quot;
    
    if [ -z &quot;$AWS_KEY_PAIR_NAME&quot; ]; then
        echo &quot;AWS_KEY_PAIR_NAME is empty and must be populated&quot;
        exit 1
    fi
    
    if [ -z &quot;$AWS_ENVIRONMENT_SUBNET_ID&quot; ]; then
        echo &quot;AWS_ENVIRONMENT_SUBNET_ID is empty and must be populated&quot;
        exit 1
    fi
    
    if [ -z &quot;$AWS_VPC_ID&quot; ]; then
        echo &quot;AWS_VPC_ID is empty and must be populated&quot;
        exit 1
    fi
    
    if [ -z &quot;$AWS_DEFAULT_APP_SECURITY_GROUP_ID&quot; ]; then
        echo &quot;AWS_DEFAULT_APP_SECURITY_GROUP_ID is empty and must be populated&quot;
        exit 1
    fi
    
    echo &quot;Validation successful!&quot;
    &quot;&quot;&quot;
}

// Determine how many participants already exist
def existing_participants = 0
def folder_contents = jenkins.model.Jenkins.getInstance().getItemByFullName(&quot;JavaTraining&quot;,com.cloudbees.hudson.plugins.folder.Folder).getItems()

for (int i = 0; i &lt; folder_contents.size(); i++) {
  folder = folder_contents.getAt(i)
  folder_name = folder.getName()
  if ( folder_name.startsWith(&quot;Participant&quot;) ) {
  	println(&quot;Found: &quot; + folder_name)
    existing_participants++
  }
  folder_name = null
  folder = null
}
folder_contents = null

println(&quot;Found &quot; + existing_participants + &quot; existing participants&quot;)

// Setup Participants
def participants = [:]
def participant_array = &quot;${PARTICIPANT_USERS}&quot;.split(&quot;,&quot;)
println(participant_array)
for (int i = 0; i &lt; participant_array.size(); i++) {
    String participant_email = participant_array.getAt(i)
    String participant_id = String.valueOf(existing_participants + i + 1)
    echo &quot;Generating Project for Participant ${participant_id}: ${participant_email}&quot;
    participants[&quot;participant${participant_id}&quot;] = {
        build job: &apos;JavaTraining/Project_Management/Generate_Project&apos;, parameters: [[$class: &apos;StringParameterValue&apos;, name: &apos;PROJECT_NAME&apos;, value: &quot;Participant${participant_id}&quot;], [$class: &apos;StringParameterValue&apos;, name: &apos;ADMIN_USERS&apos;, value: &quot;${participant_email}&quot;], [$class: &apos;StringParameterValue&apos;, name: &apos;DEVELOPER_USERS&apos;, value: &apos;&apos;], [$class: &apos;StringParameterValue&apos;, name: &apos;VIEWER_USERS&apos;, value: &apos;&apos;]]
        retry(5) {
            build job: &quot;JavaTraining/Participant${participant_id}/Cartridge_Management/Load_Cartridge&quot;, parameters: [[$class: &apos;StringParameterValue&apos;, name: &apos;CARTRIDGE_CLONE_URL&apos;, value: &apos;ssh://jenkins@gerrit.service.adop.consul:29418/cartridges/cartridge-java_training_participant.git&apos;]]
        }
        build job: &quot;JavaTraining/Participant${participant_id}/Create_Environment&quot;, parameters: [[$class: &apos;StringParameterValue&apos;, name: &apos;ENVIRONMENT_NAME&apos;, value: &apos;CI&apos;], [$class: &apos;StringParameterValue&apos;, name: &apos;KEY_NAME&apos;, value: &quot;${AWS_KEY_PAIR_NAME}&quot;], [$class: &apos;StringParameterValue&apos;, name: &apos;SUBNET_ID&apos;, value: &quot;${AWS_ENVIRONMENT_SUBNET_ID}&quot;], [$class: &apos;StringParameterValue&apos;, name: &apos;VPC_ID&apos;, value: &quot;${AWS_VPC_ID}&quot;], [$class: &apos;StringParameterValue&apos;, name: &apos;DEFAULT_APP_SECURITY_GROUP_ID&apos;, value: &quot;${AWS_DEFAULT_APP_SECURITY_GROUP_ID}&quot;]]
    }
}
parallel participants</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
</flow-definition>